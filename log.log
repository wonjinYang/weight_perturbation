Traceback (most recent call last):
  File "/home/yang07/workspace/weight_perturbation/debug_generator.py", line 8, in <module>
    from .models import Generator
ImportError: attempted relative import with no known parent package
(torch_env) yang07@DESKTOP-AGNL1K1:~/workspace/weight_perturbation$ vi debug_generator.py
(torch_env) yang07@DESKTOP-AGNL1K1:~/workspace/weight_perturbation$ vi debug_generator.py
(torch_env) yang07@DESKTOP-AGNL1K1:~/workspace/weight_perturbation$ python debug_generator.py
✓ All imports successful
Starting Weight Perturbation Debug Tests...

=== Debugging parameters_to_vector ===
Number of parameters: 8
  Param 0: shape=torch.Size([64, 2]), numel=128, requires_grad=True
  Param 1: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 2: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 3: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 4: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 5: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 6: shape=torch.Size([2, 64]), numel=128, requires_grad=True
  Param 7: shape=torch.Size([2]), numel=2, requires_grad=True
Attempting parameters_to_vector...
✓ Success! Vector size: 8642

=== Testing Generator Creation ===
✓ Generator created with 8642 parameters
Generator parameters:
  model.0.weight: shape=torch.Size([64, 2]), numel=128, device=cpu
  model.0.bias: shape=torch.Size([64]), numel=64, device=cpu
  model.2.weight: shape=torch.Size([64, 64]), numel=4096, device=cpu
  model.2.bias: shape=torch.Size([64]), numel=64, device=cpu
  model.4.weight: shape=torch.Size([64, 64]), numel=4096, device=cpu
  model.4.bias: shape=torch.Size([64]), numel=64, device=cpu
  model.6.weight: shape=torch.Size([2, 64]), numel=128, device=cpu
  model.6.bias: shape=torch.Size([2]), numel=2, device=cpu

=== Debugging parameters_to_vector ===
Number of parameters: 8
  Param 0: shape=torch.Size([64, 2]), numel=128, requires_grad=True
  Param 1: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 2: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 3: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 4: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 5: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 6: shape=torch.Size([2, 64]), numel=128, requires_grad=True
  Param 7: shape=torch.Size([2]), numel=2, requires_grad=True
Attempting parameters_to_vector...
✓ Success! Vector size: 8642
✓ Parameter vector creation successful
✓ Forward pass successful: input torch.Size([10, 2]) -> output torch.Size([10, 2])

=== Testing Generator Copy ===
Creating generator copy: noise_dim=2, data_dim=2, hidden_dim=64
New generator parameter count: 8642
Successfully copied weights from original generator
✓ Generator copy created with 8642 parameters
Testing parameter vector on copy...

=== Debugging parameters_to_vector ===
Number of parameters: 8
  Param 0: shape=torch.Size([64, 2]), numel=128, requires_grad=True
  Param 1: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 2: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 3: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 4: shape=torch.Size([64, 64]), numel=4096, requires_grad=True
  Param 5: shape=torch.Size([64]), numel=64, requires_grad=True
  Param 6: shape=torch.Size([2, 64]), numel=128, requires_grad=True
  Param 7: shape=torch.Size([2]), numel=2, requires_grad=True
Attempting parameters_to_vector...
✓ Success! Vector size: 8642
✓ Copy parameter vector creation successful

=== Testing Perturbation Initialization ===
✓ Pretraining completed
/home/yang07/workspace/weight_perturbation/src/weight_perturbation/samplers.py:44: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  means = [torch.tensor(m, dtype=torch.float32).detach().clone() if isinstance(m, torch.Tensor)
✓ Target samples created
✓ Perturber initialized
Attempting perturbation step...
Creating generator copy: noise_dim=2, data_dim=2, hidden_dim=64
New generator parameter count: 8642
Successfully copied weights from original generator
Creating parameter vector for generator with 8642 parameters
Generator parameters:
  model.0.weight: shape=torch.Size([64, 2]), numel=128
  model.0.bias: shape=torch.Size([64]), numel=64
  model.2.weight: shape=torch.Size([64, 64]), numel=4096
  model.2.bias: shape=torch.Size([64]), numel=64
  model.4.weight: shape=torch.Size([64, 64]), numel=4096
  model.4.bias: shape=torch.Size([64]), numel=64
  model.6.weight: shape=torch.Size([2, 64]), numel=128
  model.6.bias: shape=torch.Size([2]), numel=2
Successfully created parameter vector of size 8642
[ 0] W2(Pert, Target)=5.4115 Improvement=0.0029 eta=0.0170
✓ Perturbation step completed

=== Summary ===
✓ All tests passed! The library should work correctly.
